@model OA.PermissionsDto.PermissionDto
<div class="box-body">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.DropDownList("pParent", new SelectList(ViewData["parentid"] as List<OA.PermissionsDto.PermissionDto>, "pid", "pName", Model == null ? 0 : Model.pParent), new { @class = "form-control" })

        </div>

        <div class="form-group">
            <input id="pid" name="pid" type="hidden" value="@(Model == null ? 0 : Model.pid)">
            @Html.EditorFor(model => model.pName, new { htmlAttributes = new { @class = "form-control", placeholder = "权限名" } })
            @Html.ValidationMessageFor(model => model.pName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">

            @Html.EditorFor(model => model.pAreaName, new { htmlAttributes = new { @class = "form-control", placeholder = "区域名" } })
            @Html.ValidationMessageFor(model => model.pAreaName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">

            @Html.EditorFor(model => model.pControllerName, new { htmlAttributes = new { @class = "form-control", placeholder = "控制名" } })
            @Html.ValidationMessageFor(model => model.pControllerName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">

            @Html.EditorFor(model => model.pActionName, new { htmlAttributes = new { @class = "form-control", placeholder = "Action" } })
            @Html.ValidationMessageFor(model => model.pActionName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <label>请求方式</label>
            @{
                List<SelectListItem> list = new List<SelectListItem> {

                new SelectListItem { Text = "Get", Value = "0",Selected = true},
                 new SelectListItem { Text = "Post", Value = "1",Selected = true},
                new SelectListItem { Text = "Push", Value = "2" } };

            }
            @Html.DropDownList("pFormMethod", new SelectList(list, "Value", "Text", Model == null ? 0 : Model.pFormMethod), new { @class = "form-control" })                     

        </div>

        <div class="form-group">

            @Html.EditorFor(model => model.pOperationType, new { htmlAttributes = new { @class = "form-control", placeholder = "操作类型" } })
            @Html.ValidationMessageFor(model => model.pOperationType, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">

            @Html.EditorFor(model => model.pOrder, new { htmlAttributes = new { @class = "form-control", placeholder = "序号" } })
            @Html.ValidationMessageFor(model => model.pOrder, "", new { @class = "text-danger" })

        </div>
        <div class="radio">
            <label class="control-label col-md-2" for="rIsDel">是否链接</label>
            <label>@Html.RadioButton("pIsLink", "false", true) 否</label>
            <label style="margin-left:20px;">@Html.RadioButton("pIsLink", "true", false) 是</label>
            @Html.ValidationMessageFor(model => model.pIsLink, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">

            @Html.EditorFor(model => model.pLinkUrl, new { htmlAttributes = new { @class = "form-control", placeholder = "链接地址" } })
            @Html.ValidationMessageFor(model => model.pLinkUrl, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">

            @Html.EditorFor(model => model.pRemark, new { htmlAttributes = new { @class = "form-control", placeholder = "备注" } })
            @Html.ValidationMessageFor(model => model.pRemark, "", new { @class = "text-danger" })

        </div>

        <div class="radio">
            <label class="control-label col-md-2" for="rIsDel">是否展示</label>
            <label>@Html.RadioButton("pIsShow", "false", false) 否</label>
            <label style="margin-left:20px;">@Html.RadioButton("pIsShow", "true", true) 是</label>
            @Html.ValidationMessageFor(model => model.pIsShow, "", new { @class = "text-danger" })
        </div>

            <div class="radio">
                <label class="control-label col-md-2" for="rIsDel">是否删除</label>
                <label>@Html.RadioButton("pIsDel", "false", true) 否</label>
                <label style="margin-left:20px;">@Html.RadioButton("pIsDel", "true", false) 是</label>
                @Html.ValidationMessageFor(model => model.pIsDel, "", new { @class = "text-danger" })
            </div>

            @Html.HiddenFor(model => model.pAddTime, new { htmlAttributes = new { @class = "form-control", value = DateTime.Now } })
                }

</div>
