@model OA.UserDto.UserInfoDto

<div class="box-body">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.DropDownList("uDepId", new SelectList(ViewData["depList"] as List<OA.DepartmentsDto.DepartmentDto>, "depId", "depName", Model == null ? 0 : Model.uDepId), new { @class = "form-control" })
            @*@Html.EditorFor(model => model.depPid, new { htmlAttributes = new { @class = "form-control", placeholder = "depPid" } })*@
            @Html.ValidationMessageFor(model => model.uDepId, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <input type="hidden" name="uId" id="uId" value="@(Model == null ? 0 : Model.uId) " />
            @Html.EditorFor(model => model.uLoginName, new { htmlAttributes = new { @class = "form-control  ", placeholder = "登录名" } })
            @Html.ValidationMessageFor(model => model.uLoginName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">

            @Html.PasswordFor(model => model.uPwd, new { @class = "form-control  ", placeholder = "密码" })
            @Html.ValidationMessageFor(model => model.uPwd, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">

            @Html.EditorFor(model => model.uName, new { htmlAttributes = new { @class = "form-control  ", placeholder = "姓名" } })
            @Html.ValidationMessageFor(model => model.uName, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            <div class="radio">
                <label class="control-label col-md-2" for="uPwd">性别</label>

                <label>@Html.RadioButton("uGender", "true", Model == null ? true : Model.uGender.Value) 女</label>
                <label>@Html.RadioButton("uGender", "false", Model == null ? false : !Model.uGender.Value) 男</label>
                @Html.ValidationMessageFor(model => model.uGender, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.uEmail, new { htmlAttributes = new { @class = "form-control  ", placeholder = "邮箱", type = "email" } })
            @Html.ValidationMessageFor(model => model.uEmail, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">

            @Html.EditorFor(model => model.uAddress, new { htmlAttributes = new { @class = "form-control  ", placeholder = "地址" } })
            @Html.ValidationMessageFor(model => model.uAddress, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">

            @Html.EditorFor(model => model.uRemark, new { htmlAttributes = new { @class = "form-control  ", placeholder = "备注" } })
            @Html.ValidationMessageFor(model => model.uRemark, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="radio">
                <label class="control-label col-md-2" for="uPwd">是否离职</label>

                @*@Html.EditorFor(model => model.uIsDel)*@
                <label>@Html.RadioButton("uIsDel", "false", Model == null ? true : Model.uIsDel.Value) 否</label>
                <label>@Html.RadioButton("uIsDel", "true", Model == null ? false : !Model.uIsDel.Value) 是</label>
                @Html.ValidationMessageFor(model => model.uIsDel, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>*@


    }

</div>